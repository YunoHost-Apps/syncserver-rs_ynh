packaging_format = 2

id = "syncstorage-rs"
name = "Firefox Sync Storage-rs"

[description]
    en = "New Firefox Sync Storage implemented in Rust. Allows syncing tabs, passwords, history etc. between Firefox instances."
    fr = "New Firefox Sync Storage implemented in Rust."

version = "0.13.6~ynh1"

maintainers = [""]

[upstream]
license = "MPL 2.0"
website = "https://www.mozilla.org/en-GB/firefox/features/sync/"
admindoc = "https://github.com/mozilla-services/syncstorage-rs/blob/master/docs/config.md"
code = "https://github.com/mozilla-services/syncstorage-rs"
fund = "https://donate.mozilla.org/en-GB/"

[integration]
yunohost = ">= 11.1.21"
architectures = "all"
multi_instance = true

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G... You may have have a look at CI results
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/syncserver"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/mozilla-services/syncstorage-rs/archive/refs/tags/0.13.6.tar.gz"
        sha256 = "ddf8169a0a9bd06db10bf032a2b9af7ea4e5816251e82d9e7627f87eba1f27bd"
        autoupdate.strategy = "latest_github_tag"

    # This will provision/deprovision a unix system user
    [resources.system_user]

    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir
    [resources.install_dir]

    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    [resources.permissions]
    main.url = "/"

    # This will pick a random port for reverse-proxying and store it as the $port setting
    [resources.ports]

    [resources.apt]
    packages = "mariadb-server default-libmysqlclient-dev cmake python3-dev python3-pip python3-setuptools python3-wheel build-essential libssl-dev libffi-dev libcurl4"

    # This will automatically provision/deprovison a database and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    [resources.database]
        type = "mysql"
    