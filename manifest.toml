#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "syncserver-rs"
name = "Firefox SyncStorage"

description.en = "Synchronize tabs, passwords, history etc. between your Firefox instances"
description.fr = "Synchronisez for onglets, mot de passe, historique etc entre vos Firefox"

version = "0.18.3~ynh1"

maintainers = ["orhtej2"]

[upstream]
license = "MPL-2.0"
website = "https://www.mozilla.org/en-GB/firefox/features/sync/"
admindoc = "https://github.com/mozilla-services/syncstorage-rs/blob/master/docs/config.md"
code = "https://github.com/mozilla-services/syncstorage-rs"
fund = "https://donate.mozilla.org/en-GB/"

[integration]
yunohost = ">= 11.1.21"
architectures = "all"
multi_instance = true
sso = false
ldap = false

disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain" 

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/mozilla-services/syncstorage-rs/archive/refs/tags/0.18.3.tar.gz"
        sha256 = "496555d4fd4059b9b33b8c20d2742c6eb3a0592188dd0f2da77624ac9856d1b5"
        autoupdate.strategy = "latest_github_tag" 

    # This will provision/deprovision a unix system user
    [resources.system_user]

    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir
    [resources.install_dir]

    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    [resources.permissions]
        main.url = "/"
        main.show_tile = false
        main.allowed = "visitors"
        main.protected = true

    # This will pick a random port for reverse-proxying and store it as the $port setting
    [resources.ports]

    [resources.apt]
    packages = "mariadb-server default-libmysqlclient-dev cmake python3-dev python3-pip python3-setuptools python3-wheel build-essential libssl-dev libffi-dev libcurl4 pkg-config python3-venv"

    # This will automatically provision/deprovison a database and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    [resources.database]
        type = "mysql"
    
